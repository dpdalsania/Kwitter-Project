{"ast":null,"code":"import _defineProperty from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { GETUSER, CREATEUSER, DELETEUSER, LOGOUT } from \"../actionTypes\";\nimport { login } from \"./auth\";\nvar url = domain + \"/users\";\nexport var getUser = function getUser(userName) {\n  return function (dispatch) {\n    dispatch({\n      type: GETUSER.START\n    });\n    return fetch(url + \"/\" + userName, {\n      method: \"GET\",\n      headers: jsonHeaders\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: GETUSER.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: GETUSER.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\n\nvar _createUser = function _createUser(registerData) {\n  return function (dispatch) {\n    dispatch({\n      type: CREATEUSER.START\n    });\n    return fetch(url, {\n      method: \"POST\",\n      headers: jsonHeaders,\n      body: JSON.stringify(registerData)\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: CREATEUSER.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: CREATEUSER.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\n\nexport var createUser = function createUser(registerData) {\n  return function (dispatch, getState) {\n    return dispatch(_createUser(registerData)).then(function () {\n      return dispatch(login({\n        username: registerData.username,\n        password: registerData.password\n      }));\n    }).then(function () {\n      return dispatch({\n        type: LOGOUT.SUCCESS,\n        payload: {\n          statusCode: 200\n        }\n      });\n    });\n  };\n};\nexport var deleteUser = function deleteUser() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: DELETEUSER.START\n    });\n    var _getState$auth$login$ = getState().auth.login.result,\n        username = _getState$auth$login$.username,\n        token = _getState$auth$login$.token;\n    return fetch(url + \"/\" + username, {\n      method: \"DELETE\",\n      headers: _objectSpread({\n        Authorization: \"Bearer \" + token\n      }, jsonHeaders)\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: DELETEUSER.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: DELETEUSER.FAIL,\n        payload: err\n      }));\n    }).then(function () {\n      return dispatch({\n        type: LOGOUT.SUCCESS,\n        payload: {\n          statusCode: 200\n        }\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/redux/actionCreators/users.js"],"names":["domain","jsonHeaders","handleJsonResponse","GETUSER","CREATEUSER","DELETEUSER","LOGOUT","login","url","getUser","userName","dispatch","type","START","fetch","method","headers","then","result","SUCCESS","payload","catch","err","Promise","reject","FAIL","_createUser","registerData","body","JSON","stringify","createUser","getState","username","password","statusCode","deleteUser","auth","token","Authorization"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,kBAA9B,QAAwD,aAAxD;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B,EAA0CC,MAA1C,QAAwD,gBAAxD;AACA,SAASC,KAAT,QAAsB,QAAtB;AAEA,IAAMC,GAAG,GAAGR,MAAM,GAAG,QAArB;AAEA,OAAO,IAAMS,OAAO,GAAG,SAAVA,OAAU,CAAAC,QAAQ;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAC7CA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,OAAO,CAACU;AADP,KAAD,CAAR;AAIA,WAAOC,KAAK,CAACN,GAAG,GAAG,GAAN,GAAYE,QAAb,EAAuB;AACjCK,MAAAA,MAAM,EAAE,KADyB;AAEjCC,MAAAA,OAAO,EAAEf;AAFwB,KAAvB,CAAL,CAIJgB,IAJI,CAICf,kBAJD,EAKJe,IALI,CAKC,UAAAC,MAAM,EAAI;AACd,aAAOP,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAET,OAAO,CAACgB,OADA;AAEdC,QAAAA,OAAO,EAAEF;AAFK,OAAD,CAAf;AAID,KAVI,EAWJG,KAXI,CAWE,UAAAC,GAAG,EAAI;AACZ,aAAOC,OAAO,CAACC,MAAR,CAAeb,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAET,OAAO,CAACsB,IAAhB;AAAsBL,QAAAA,OAAO,EAAEE;AAA/B,OAAD,CAAvB,CAAP;AACD,KAbI,CAAP;AAcD,GAnB8B;AAAA,CAAxB;;AAqBP,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAC,YAAY;AAAA,SAAI,UAAAhB,QAAQ,EAAI;AAC9CA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,UAAU,CAACS;AAAnB,KAAD,CAAR;AAEA,WAAOC,KAAK,CAACN,GAAD,EAAM;AAChBO,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAEf,WAFO;AAGhB2B,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,YAAf;AAHU,KAAN,CAAL,CAKJV,IALI,CAKCf,kBALD,EAMJe,IANI,CAMC,UAAAC,MAAM,EAAI;AACd,aAAOP,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAER,UAAU,CAACe,OADH;AAEdC,QAAAA,OAAO,EAAEF;AAFK,OAAD,CAAf;AAID,KAXI,EAYJG,KAZI,CAYE,UAAAC,GAAG,EAAI;AACZ,aAAOC,OAAO,CAACC,MAAR,CAAeb,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAER,UAAU,CAACqB,IAAnB;AAAyBL,QAAAA,OAAO,EAAEE;AAAlC,OAAD,CAAvB,CAAP;AACD,KAdI,CAAP;AAeD,GAlB+B;AAAA,CAAhC;;AAoBA,OAAO,IAAMS,UAAU,GAAG,SAAbA,UAAa,CAAAJ,YAAY;AAAA,SAAI,UAAChB,QAAD,EAAWqB,QAAX,EAAwB;AAChE,WAAOrB,QAAQ,CAACe,WAAW,CAACC,YAAD,CAAZ,CAAR,CACJV,IADI,CACC;AAAA,aACJN,QAAQ,CACNJ,KAAK,CAAC;AACJ0B,QAAAA,QAAQ,EAAEN,YAAY,CAACM,QADnB;AAEJC,QAAAA,QAAQ,EAAEP,YAAY,CAACO;AAFnB,OAAD,CADC,CADJ;AAAA,KADD,EASJjB,IATI,CASC,YAAM;AACV,aAAON,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAEN,MAAM,CAACa,OADC;AAEdC,QAAAA,OAAO,EAAE;AAAEe,UAAAA,UAAU,EAAE;AAAd;AAFK,OAAD,CAAf;AAID,KAdI,CAAP;AAeD,GAhBqC;AAAA,CAA/B;AAkBP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAACzB,QAAD,EAAWqB,QAAX,EAAwB;AACtDrB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,UAAU,CAACQ;AAAnB,KAAD,CAAR;AADsD,gCAG1BmB,QAAQ,GAAGK,IAAX,CAAgB9B,KAAhB,CAAsBW,MAHI;AAAA,QAG9Ce,QAH8C,yBAG9CA,QAH8C;AAAA,QAGpCK,KAHoC,yBAGpCA,KAHoC;AAKtD,WAAOxB,KAAK,CAACN,GAAG,GAAG,GAAN,GAAYyB,QAAb,EAAuB;AACjClB,MAAAA,MAAM,EAAE,QADyB;AAEjCC,MAAAA,OAAO;AAAIuB,QAAAA,aAAa,EAAE,YAAYD;AAA/B,SAAyCrC,WAAzC;AAF0B,KAAvB,CAAL,CAIJgB,IAJI,CAICf,kBAJD,EAKJe,IALI,CAKC,UAAAC,MAAM,EAAI;AACd,aAAOP,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAEP,UAAU,CAACc,OADH;AAEdC,QAAAA,OAAO,EAAEF;AAFK,OAAD,CAAf;AAID,KAVI,EAWJG,KAXI,CAWE,UAAAC,GAAG,EAAI;AACZ,aAAOC,OAAO,CAACC,MAAR,CAAeb,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEP,UAAU,CAACoB,IAAnB;AAAyBL,QAAAA,OAAO,EAAEE;AAAlC,OAAD,CAAvB,CAAP;AACD,KAbI,EAcJL,IAdI,CAcC,YAAM;AACV,aAAON,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAEN,MAAM,CAACa,OADC;AAEdC,QAAAA,OAAO,EAAE;AAAEe,UAAAA,UAAU,EAAE;AAAd;AAFK,OAAD,CAAf;AAID,KAnBI,CAAP;AAoBD,GAzByB;AAAA,CAAnB","sourcesContent":["import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { GETUSER, CREATEUSER, DELETEUSER, LOGOUT } from \"../actionTypes\";\nimport { login } from \"./auth\";\n\nconst url = domain + \"/users\";\n\nexport const getUser = userName => dispatch => {\n  dispatch({\n    type: GETUSER.START\n  });\n\n  return fetch(url + \"/\" + userName, {\n    method: \"GET\",\n    headers: jsonHeaders\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: GETUSER.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(dispatch({ type: GETUSER.FAIL, payload: err }));\n    });\n};\n\nconst _createUser = registerData => dispatch => {\n  dispatch({ type: CREATEUSER.START });\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: jsonHeaders,\n    body: JSON.stringify(registerData)\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: CREATEUSER.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(dispatch({ type: CREATEUSER.FAIL, payload: err }));\n    });\n};\n\nexport const createUser = registerData => (dispatch, getState) => {\n  return dispatch(_createUser(registerData))\n    .then(() =>\n      dispatch(\n        login({\n          username: registerData.username,\n          password: registerData.password\n        })\n      )\n    )\n    .then(() => {\n      return dispatch({\n        type: LOGOUT.SUCCESS,\n        payload: { statusCode: 200 }\n      });\n    });\n};\n\nexport const deleteUser = () => (dispatch, getState) => {\n  dispatch({ type: DELETEUSER.START });\n\n  const { username, token } = getState().auth.login.result;\n\n  return fetch(url + \"/\" + username, {\n    method: \"DELETE\",\n    headers: { Authorization: \"Bearer \" + token, ...jsonHeaders }\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: DELETEUSER.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(dispatch({ type: DELETEUSER.FAIL, payload: err }));\n    })\n    .then(() => {\n      return dispatch({\n        type: LOGOUT.SUCCESS,\n        payload: { statusCode: 200 }\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}