{"ast":null,"code":"// hey group - this is copied from login.js and is intended as a sample to model\n//what we might want to do with our reducers.\nimport { DELETEMESSAGE } from \"../../actionTypes\";\nimport { withAsyncReducer } from \"../../HORs\"; // const initialState = {\n//   result: null,\n//   loading: false,\n//   error: null\n// };\n// const getInitStateFromStorage = (key, initialState) => {\n//   const storedState = JSON.parse(localStorage.getItem(key));\n//   if (storedState) {\n//     const unchangedInitialStateProps =\n//       Object.keys(storedState).every(\n//         property => initialState[property] !== undefined\n//       ) &&\n//       Object.keys(initialState).every(\n//         property => storedState[property] !== undefined\n//       );\n//     if (unchangedInitialStateProps) {\n//       return storedState;\n//     }\n//   }\n//   return initialState;\n// };\n// const deleteMessage = (\n//   state = getInitStateFromStorage(\"login\", initialState),\n//   action\n// ) => {\n//   switch (action.type) {\n//     case DELETEMESSAGE.SUCCESS:\n//       return { ...initialState };\n//     default:\n//       return state;\n//   }\n// };\n// export default withAsyncReducer(DELETEMESSAGE, deleteMessage);","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/redux/stateReducers/messages/deleteMessage.js"],"names":["DELETEMESSAGE","withAsyncReducer"],"mappings":"AAAA;AACA;AAEA,SAASA,aAAT,QAA8B,mBAA9B;AACA,SAASC,gBAAT,QAAiC,YAAjC,C,CAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// hey group - this is copied from login.js and is intended as a sample to model\n//what we might want to do with our reducers.\n\nimport { DELETEMESSAGE } from \"../../actionTypes\";\nimport { withAsyncReducer } from \"../../HORs\";\n\n\n// const initialState = {\n//   result: null,\n//   loading: false,\n//   error: null\n// };\n\n// const getInitStateFromStorage = (key, initialState) => {\n//   const storedState = JSON.parse(localStorage.getItem(key));\n\n//   if (storedState) {\n//     const unchangedInitialStateProps =\n//       Object.keys(storedState).every(\n//         property => initialState[property] !== undefined\n//       ) &&\n//       Object.keys(initialState).every(\n//         property => storedState[property] !== undefined\n//       );\n//     if (unchangedInitialStateProps) {\n//       return storedState;\n//     }\n//   }\n//   return initialState;\n// };\n\n// const deleteMessage = (\n//   state = getInitStateFromStorage(\"login\", initialState),\n//   action\n// ) => {\n//   switch (action.type) {\n//     case DELETEMESSAGE.SUCCESS:\n//       return { ...initialState };\n//     default:\n//       return state;\n//   }\n// };\n\n// export default withAsyncReducer(DELETEMESSAGE, deleteMessage);\n"]},"metadata":{},"sourceType":"module"}