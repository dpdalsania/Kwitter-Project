{"ast":null,"code":"import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"./stateReducers\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nexport var history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\nexport default function configureStore(preloadedState) {\n  var store = createStore(createRootReducer(history), // root reducer with router state\n  preloadedState, composeWithDevTools(applyMiddleware(routerMiddleware(history), // for dispatching history actions\n  thunk // ... other middlewares ...\n  )));\n  store.subscribe(function () {\n    localStorage.setItem(\"login\", JSON.stringify(store.getState().auth.login));\n  });\n  return store;\n}","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/redux/configureStore.js"],"names":["createBrowserHistory","applyMiddleware","createStore","routerMiddleware","createRootReducer","thunk","composeWithDevTools","history","basename","process","env","PUBLIC_URL","configureStore","preloadedState","store","subscribe","localStorage","setItem","JSON","stringify","getState","auth","login"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,SAArC;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,iBAAP,MAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,IAAMC,OAAO,GAAGP,oBAAoB,CAAC;AAC1CQ,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADoB,CAAD,CAApC;AAIP,eAAe,SAASC,cAAT,CAAwBC,cAAxB,EAAwC;AACrD,MAAMC,KAAK,GAAGZ,WAAW,CACvBE,iBAAiB,CAACG,OAAD,CADM,EACK;AAC5BM,EAAAA,cAFuB,EAGvBP,mBAAmB,CACjBL,eAAe,CACbE,gBAAgB,CAACI,OAAD,CADH,EACc;AAC3BF,EAAAA,KAFa,CAGb;AAHa,GADE,CAHI,CAAzB;AAYAS,EAAAA,KAAK,CAACC,SAAN,CAAgB,YAAM;AACpBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeL,KAAK,CAACM,QAAN,GAAiBC,IAAjB,CAAsBC,KAArC,CAA9B;AACD,GAFD;AAIA,SAAOR,KAAP;AACD","sourcesContent":["import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"./stateReducers\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history), // root reducer with router state\n    preloadedState,\n    composeWithDevTools(\n      applyMiddleware(\n        routerMiddleware(history), // for dispatching history actions\n        thunk\n        // ... other middlewares ...\n      )\n    )\n  );\n\n  store.subscribe(() => {\n    localStorage.setItem(\"login\", JSON.stringify(store.getState().auth.login));\n  });\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}