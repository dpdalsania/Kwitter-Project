{"ast":null,"code":"import _defineProperty from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { LIKEMESSAGE, UNLIKEMESSAGE } from \"../actionTypes\";\nimport { getMessages } from \"./messages\";\nvar url = domain + \"/likes\";\nexport var _likeMessage = function _likeMessage(messageId, token) {\n  return function (dispatch) {\n    dispatch({\n      type: LIKEMESSAGE.START\n    });\n    return fetch(url, {\n      method: \"POST\",\n      headers: _objectSpread({}, jsonHeaders, {\n        Authorization: \"Bearer \" + token\n      }),\n      body: JSON.stringify(messageId)\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: LIKEMESSAGE.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: LIKEMESSAGE.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\nexport var _unlikeMessage = function _unlikeMessage(likeId, token) {\n  return function (dispatch) {\n    dispatch({\n      type: UNLIKEMESSAGE.START\n    });\n    return fetch(url + \"/\" + likeId, {\n      method: \"DELETE\",\n      headers: _objectSpread({}, jsonHeaders, {\n        Authorization: \"Bearer \" + token\n      })\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: UNLIKEMESSAGE.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: UNLIKEMESSAGE.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\nexport var likeMessage = function likeMessage(messageId, token) {\n  return function (dispatch) {\n    return dispatch(_likeMessage(messageId, token)).then(function () {\n      return dispatch(getMessages());\n    });\n  };\n};\nexport var unlikeMessage = function unlikeMessage(messageId, token) {\n  return function (dispatch) {\n    return dispatch(_unlikeMessage(messageId, token)).then(function () {\n      return dispatch(getMessages());\n    });\n  };\n};","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/redux/actionCreators/likes.js"],"names":["domain","jsonHeaders","handleJsonResponse","LIKEMESSAGE","UNLIKEMESSAGE","getMessages","url","_likeMessage","messageId","token","dispatch","type","START","fetch","method","headers","Authorization","body","JSON","stringify","then","result","SUCCESS","payload","catch","err","Promise","reject","FAIL","_unlikeMessage","likeId","likeMessage","unlikeMessage"],"mappings":"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","sourcesContent":["import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { LIKEMESSAGE, UNLIKEMESSAGE } from \"../actionTypes\";\nimport { getMessages } from \"./messages\";\n\nconst url = domain + \"/likes\";\n\nexport const _likeMessage = (messageId, token) => dispatch => {\n  dispatch({\n    type: LIKEMESSAGE.START\n  });\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: { ...jsonHeaders, Authorization: \"Bearer \" + token },\n    body: JSON.stringify(messageId)\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: LIKEMESSAGE.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(dispatch({ type: LIKEMESSAGE.FAIL, payload: err }));\n    });\n};\n\nexport const _unlikeMessage = (likeId, token) => dispatch => {\n  dispatch({\n    type: UNLIKEMESSAGE.START\n  });\n\n  return fetch(url + `/` + likeId, {\n    method: \"DELETE\",\n    headers: { ...jsonHeaders, Authorization: \"Bearer \" + token }\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: UNLIKEMESSAGE.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(\n        dispatch({ type: UNLIKEMESSAGE.FAIL, payload: err })\n      );\n    });\n};\n\nexport const likeMessage = (messageId, token) => dispatch => {\n  return dispatch(_likeMessage(messageId, token)).then(() =>\n    dispatch(getMessages())\n  );\n};\n\nexport const unlikeMessage = (messageId, token) => dispatch => {\n  return dispatch(_unlikeMessage(messageId, token)).then(() =>\n    dispatch(getMessages())\n  );\n};\n"]},"metadata":{},"sourceType":"module"}