{"ast":null,"code":"export var domain = \"https://kwitter-api.herokuapp.com\"; //export const domain = \"http://localhost:3000\";\n// const token =\n//   \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1NzQyMDQ3NjYsImV4cCI6MTU3NDI5MTE2Nn0.-M3OIkEzI3dj-SdS0HfMP0nFB8XcKac1F3MGE9u2LAA\";\n\nexport var jsonHeaders = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\" // Authorization: \"Bearer \" + // here is where we need to add the token\n\n};\nexport var handleJsonResponse = function handleJsonResponse(res) {\n  if (res.ok) {\n    //if the response is a status code of 200 - 299\n    return res.json();\n  }\n\n  return res.json().then(function (result) {\n    throw result;\n  });\n};","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/redux/actionCreators/constants/index.js"],"names":["domain","jsonHeaders","Accept","handleJsonResponse","res","ok","json","then","result"],"mappings":"AAAA,OAAO,IAAMA,MAAM,GAAG,mCAAf,C,CACP;AAEA;AACA;;AAEA,OAAO,IAAMC,WAAW,GAAG;AACzB,kBAAgB,kBADS;AAEzBC,EAAAA,MAAM,EAAE,kBAFiB,CAGzB;;AAHyB,CAApB;AAMP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,GAAG,EAAI;AACvC,MAAIA,GAAG,CAACC,EAAR,EAAY;AACV;AACA,WAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,SAAOF,GAAG,CAACE,IAAJ,GAAWC,IAAX,CAAgB,UAAAC,MAAM,EAAI;AAC/B,UAAMA,MAAN;AACD,GAFM,CAAP;AAGD,CARM","sourcesContent":["export const domain = \"https://kwitter-api.herokuapp.com\";\n//export const domain = \"http://localhost:3000\";\n\n// const token =\n//   \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1NzQyMDQ3NjYsImV4cCI6MTU3NDI5MTE2Nn0.-M3OIkEzI3dj-SdS0HfMP0nFB8XcKac1F3MGE9u2LAA\";\n\nexport const jsonHeaders = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\"\n  // Authorization: \"Bearer \" + // here is where we need to add the token\n};\n\nexport const handleJsonResponse = res => {\n  if (res.ok) {\n    //if the response is a status code of 200 - 299\n    return res.json();\n  }\n  return res.json().then(result => {\n    throw result;\n  });\n};\n"]},"metadata":{},"sourceType":"module"}