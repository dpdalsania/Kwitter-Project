{"ast":null,"code":"import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { GETUSER } from \"../actionTypes\";\nvar url = domain + \"/users\";\nexport var getUser = function getUser(userName) {\n  return function (dispatch) {\n    dispatch({\n      type: GETUSER.START\n    });\n    return fetch(url + \"/\" + userName, {\n      method: \"GET\",\n      headers: jsonHeaders\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: GETUSER.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: GETUSER.FAIL,\n        payload: err\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/redux/actionCreators/users.js"],"names":["domain","jsonHeaders","handleJsonResponse","GETUSER","url","getUser","userName","dispatch","type","START","fetch","method","headers","then","result","SUCCESS","payload","catch","err","Promise","reject","FAIL"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,kBAA9B,QAAwD,aAAxD;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,IAAMC,GAAG,GAAGJ,MAAM,GAAG,QAArB;AAEA,OAAO,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAAAC,QAAQ;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAC7CA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,OAAO,CAACM;AADP,KAAD,CAAR;AAIA,WAAOC,KAAK,CAACN,GAAG,GAAG,GAAN,GAAYE,QAAb,EAAuB;AACjCK,MAAAA,MAAM,EAAE,KADyB;AAEjCC,MAAAA,OAAO,EAAEX;AAFwB,KAAvB,CAAL,CAIJY,IAJI,CAICX,kBAJD,EAKJW,IALI,CAKC,UAAAC,MAAM,EAAI;AACd,aAAOP,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAEL,OAAO,CAACY,OADA;AAEdC,QAAAA,OAAO,EAAEF;AAFK,OAAD,CAAf;AAID,KAVI,EAWJG,KAXI,CAWE,UAAAC,GAAG,EAAI;AACZ,aAAOC,OAAO,CAACC,MAAR,CAAeb,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEL,OAAO,CAACkB,IAAhB;AAAsBL,QAAAA,OAAO,EAAEE;AAA/B,OAAD,CAAvB,CAAP;AACD,KAbI,CAAP;AAcD,GAnB8B;AAAA,CAAxB","sourcesContent":["import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { GETUSER } from \"../actionTypes\";\n\nconst url = domain + \"/users\";\n\nexport const getUser = userName => dispatch => {\n  dispatch({\n    type: GETUSER.START\n  });\n\n  return fetch(url + \"/\" + userName, {\n    method: \"GET\",\n    headers: jsonHeaders\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: GETUSER.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(dispatch({ type: GETUSER.FAIL, payload: err }));\n    });\n};\n"]},"metadata":{},"sourceType":"module"}