{"ast":null,"code":"import _defineProperty from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { connect } from \".\";\nimport * as actionCreators from \"../../redux\";\n\nvar withAsyncAction = function withAsyncAction(reducerName, actionCreatorName) {\n  return function (component) {\n    var makeError = function makeError(message) {\n      return new Error(\"\".concat(component.name, \" component: withAction: Failed to bind to action \").concat(actionCreatorName, \": \").concat(message));\n    };\n\n    if (!actionCreators[actionCreatorName]) {\n      throw makeError(\"\".concat(actionCreatorName, \" does not exist as an action creator function\"));\n    }\n\n    var mapStateToProps = function mapStateToProps(state) {\n      if (!state[reducerName]) {\n        throw makeError(\"\".concat(reducerName, \" does not exist as a redux reducer\"));\n      }\n\n      if (state[reducerName][actionCreatorName] === undefined) {\n        throw makeError(\"\".concat(actionCreatorName, \" does not exist as a property in redux state.\").concat(reducerName));\n      }\n\n      if (typeof state[reducerName][actionCreatorName] !== \"object\") {\n        throw makeError(\"\".concat(actionCreatorName, \" does not exist in redux state.\").concat(reducerName, \".\").concat(actionCreatorName, \" as a javascript object with properties result, loading, and error\"));\n      }\n\n      var _state$reducerName$ac = state[reducerName][actionCreatorName],\n          loading = _state$reducerName$ac.loading,\n          result = _state$reducerName$ac.result,\n          error = _state$reducerName$ac.error;\n\n      if (typeof loading !== \"boolean\") {\n        throw makeError(\"\".concat(actionCreatorName, \" does not exist in redux state.\").concat(reducerName, \".\").concat(actionCreatorName, \" with a loading property that is a boolean value\"));\n      }\n\n      if (result === undefined) {\n        throw makeError(\"\".concat(actionCreatorName, \" does not exist in redux state.\").concat(reducerName, \".\").concat(actionCreatorName, \" with a result property\"));\n      }\n\n      if (error === undefined) {\n        throw makeError(\"\".concat(actionCreatorName, \" does not exist in redux state.\").concat(reducerName, \".\").concat(actionCreatorName, \" with an error property\"));\n      }\n\n      return _objectSpread({}, state[reducerName][actionCreatorName]);\n    };\n\n    var actionCreator = actionCreators[actionCreatorName];\n\n    var mapDispatchToProps = _defineProperty({}, actionCreatorName, actionCreator);\n\n    return connect(mapStateToProps, mapDispatchToProps)(component);\n  };\n};\n\nexport default withAsyncAction;","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/react/HOCs/withAsyncAction.js"],"names":["connect","actionCreators","withAsyncAction","reducerName","actionCreatorName","component","makeError","message","Error","name","mapStateToProps","state","undefined","loading","result","error","actionCreator","mapDispatchToProps"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,GAAxB;AACA,OAAO,KAAKC,cAAZ,MAAgC,aAAhC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,WAAD,EAAcC,iBAAd;AAAA,SAAoC,UAAAC,SAAS,EAAI;AACvE,QAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,OAAO;AAAA,aACvB,IAAIC,KAAJ,WACKH,SAAS,CAACI,IADf,8DACuEL,iBADvE,eAC6FG,OAD7F,EADuB;AAAA,KAAzB;;AAKA,QAAI,CAACN,cAAc,CAACG,iBAAD,CAAnB,EAAwC;AACtC,YAAME,SAAS,WACVF,iBADU,mDAAf;AAGD;;AAED,QAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,UAAI,CAACA,KAAK,CAACR,WAAD,CAAV,EAAyB;AACvB,cAAMG,SAAS,WAAIH,WAAJ,wCAAf;AACD;;AACD,UAAIQ,KAAK,CAACR,WAAD,CAAL,CAAmBC,iBAAnB,MAA0CQ,SAA9C,EAAyD;AACvD,cAAMN,SAAS,WACVF,iBADU,0DACuDD,WADvD,EAAf;AAGD;;AACD,UAAI,OAAOQ,KAAK,CAACR,WAAD,CAAL,CAAmBC,iBAAnB,CAAP,KAAiD,QAArD,EAA+D;AAC7D,cAAME,SAAS,WACVF,iBADU,4CACyCD,WADzC,cACwDC,iBADxD,wEAAf;AAGD;;AAb8B,kCAcIO,KAAK,CAACR,WAAD,CAAL,CAAmBC,iBAAnB,CAdJ;AAAA,UAcvBS,OAduB,yBAcvBA,OAduB;AAAA,UAcdC,MAdc,yBAcdA,MAdc;AAAA,UAcNC,KAdM,yBAcNA,KAdM;;AAe/B,UAAI,OAAOF,OAAP,KAAmB,SAAvB,EAAkC;AAChC,cAAMP,SAAS,WACVF,iBADU,4CACyCD,WADzC,cACwDC,iBADxD,sDAAf;AAGD;;AACD,UAAIU,MAAM,KAAKF,SAAf,EAA0B;AACxB,cAAMN,SAAS,WACVF,iBADU,4CACyCD,WADzC,cACwDC,iBADxD,6BAAf;AAGD;;AACD,UAAIW,KAAK,KAAKH,SAAd,EAAyB;AACvB,cAAMN,SAAS,WACVF,iBADU,4CACyCD,WADzC,cACwDC,iBADxD,6BAAf;AAGD;;AAED,+BAAYO,KAAK,CAACR,WAAD,CAAL,CAAmBC,iBAAnB,CAAZ;AACD,KAhCD;;AAkCA,QAAMY,aAAa,GAAGf,cAAc,CAACG,iBAAD,CAApC;;AACA,QAAMa,kBAAkB,uBAAMb,iBAAN,EAA0BY,aAA1B,CAAxB;;AAEA,WAAOhB,OAAO,CACZU,eADY,EAEZO,kBAFY,CAAP,CAGLZ,SAHK,CAAP;AAID,GArDuB;AAAA,CAAxB;;AAuDA,eAAeH,eAAf","sourcesContent":["import { connect } from \".\";\nimport * as actionCreators from \"../../redux\";\n\nconst withAsyncAction = (reducerName, actionCreatorName) => component => {\n  const makeError = message =>\n    new Error(\n      `${component.name} component: withAction: Failed to bind to action ${actionCreatorName}: ${message}`\n    );\n\n  if (!actionCreators[actionCreatorName]) {\n    throw makeError(\n      `${actionCreatorName} does not exist as an action creator function`\n    );\n  }\n\n  const mapStateToProps = state => {\n    if (!state[reducerName]) {\n      throw makeError(`${reducerName} does not exist as a redux reducer`);\n    }\n    if (state[reducerName][actionCreatorName] === undefined) {\n      throw makeError(\n        `${actionCreatorName} does not exist as a property in redux state.${reducerName}`\n      );\n    }\n    if (typeof state[reducerName][actionCreatorName] !== \"object\") {\n      throw makeError(\n        `${actionCreatorName} does not exist in redux state.${reducerName}.${actionCreatorName} as a javascript object with properties result, loading, and error`\n      );\n    }\n    const { loading, result, error } = state[reducerName][actionCreatorName];\n    if (typeof loading !== \"boolean\") {\n      throw makeError(\n        `${actionCreatorName} does not exist in redux state.${reducerName}.${actionCreatorName} with a loading property that is a boolean value`\n      );\n    }\n    if (result === undefined) {\n      throw makeError(\n        `${actionCreatorName} does not exist in redux state.${reducerName}.${actionCreatorName} with a result property`\n      );\n    }\n    if (error === undefined) {\n      throw makeError(\n        `${actionCreatorName} does not exist in redux state.${reducerName}.${actionCreatorName} with an error property`\n      );\n    }\n\n    return { ...state[reducerName][actionCreatorName] };\n  };\n\n  const actionCreator = actionCreators[actionCreatorName];\n  const mapDispatchToProps = { [actionCreatorName]: actionCreator };\n\n  return connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(component);\n};\n\nexport default withAsyncAction;\n"]},"metadata":{},"sourceType":"module"}