{"ast":null,"code":"import _defineProperty from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { LOGIN, LOGOUT } from \"../actionTypes\";\nvar url = domain + \"/auth\";\nexport var login = function login(loginData) {\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN.START\n    });\n    return fetch(url + \"/login\", {\n      method: \"POST\",\n      headers: jsonHeaders,\n      body: JSON.stringify(loginData)\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: LOGIN.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: LOGIN.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: LOGOUT.START\n    });\n    var token = getState().auth.login.result.token;\n    return fetch(url + \"/logout\", {\n      method: \"GET\",\n      headers: _objectSpread({\n        Authorization: \"Bearer \" + token\n      }, jsonHeaders)\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: LOGOUT.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      if (err.statusCode === 401) {\n        return dispatch({\n          type: LOGOUT.SUCCESS,\n          payload: {\n            statusCode: 200\n          }\n        });\n      }\n\n      return Promise.reject(dispatch({\n        type: LOGOUT.FAIL,\n        payload: err.message\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/redux/actionCreators/auth.js"],"names":["domain","jsonHeaders","handleJsonResponse","LOGIN","LOGOUT","url","login","loginData","dispatch","type","START","fetch","method","headers","body","JSON","stringify","then","result","SUCCESS","payload","catch","err","Promise","reject","FAIL","logout","getState","token","auth","Authorization","statusCode","message"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,kBAA9B,QAAwD,aAAxD;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,gBAA9B;AAEA,IAAMC,GAAG,GAAGL,MAAM,GAAG,OAArB;AAEA,OAAO,IAAMM,KAAK,GAAG,SAARA,KAAQ,CAAAC,SAAS;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAC5CA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,KAAK,CAACO;AADL,KAAD,CAAR;AAIA,WAAOC,KAAK,CAACN,GAAG,GAAG,QAAP,EAAiB;AAC3BO,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAEZ,WAFkB;AAG3Ba,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,SAAf;AAHqB,KAAjB,CAAL,CAKJU,IALI,CAKCf,kBALD,EAMJe,IANI,CAMC,UAAAC,MAAM,EAAI;AACd,aAAOV,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAEN,KAAK,CAACgB,OADE;AAEdC,QAAAA,OAAO,EAAEF;AAFK,OAAD,CAAf;AAID,KAXI,EAYJG,KAZI,CAYE,UAAAC,GAAG,EAAI;AACZ,aAAOC,OAAO,CAACC,MAAR,CAAehB,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEN,KAAK,CAACsB,IAAd;AAAoBL,QAAAA,OAAO,EAAEE;AAA7B,OAAD,CAAvB,CAAP;AACD,KAdI,CAAP;AAeD,GApB6B;AAAA,CAAvB;AAsBP,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS;AAAA,SAAM,UAAClB,QAAD,EAAWmB,QAAX,EAAwB;AAClDnB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,MAAM,CAACM;AADN,KAAD,CAAR;AAIA,QAAMkB,KAAK,GAAGD,QAAQ,GAAGE,IAAX,CAAgBvB,KAAhB,CAAsBY,MAAtB,CAA6BU,KAA3C;AAEA,WAAOjB,KAAK,CAACN,GAAG,GAAG,SAAP,EAAkB;AAC5BO,MAAAA,MAAM,EAAE,KADoB;AAE5BC,MAAAA,OAAO;AAAIiB,QAAAA,aAAa,EAAE,YAAYF;AAA/B,SAAyC3B,WAAzC;AAFqB,KAAlB,CAAL,CAIJgB,IAJI,CAICf,kBAJD,EAKJe,IALI,CAKC,UAAAC,MAAM,EAAI;AACd,aAAOV,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAEL,MAAM,CAACe,OADC;AAEdC,QAAAA,OAAO,EAAEF;AAFK,OAAD,CAAf;AAID,KAVI,EAWJG,KAXI,CAWE,UAAAC,GAAG,EAAI;AACZ,UAAIA,GAAG,CAACS,UAAJ,KAAmB,GAAvB,EAA4B;AAC1B,eAAOvB,QAAQ,CAAC;AACdC,UAAAA,IAAI,EAAEL,MAAM,CAACe,OADC;AAEdC,UAAAA,OAAO,EAAE;AAAEW,YAAAA,UAAU,EAAE;AAAd;AAFK,SAAD,CAAf;AAID;;AACD,aAAOR,OAAO,CAACC,MAAR,CACLhB,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEL,MAAM,CAACqB,IAAf;AAAqBL,QAAAA,OAAO,EAAEE,GAAG,CAACU;AAAlC,OAAD,CADH,CAAP;AAGD,KArBI,CAAP;AAsBD,GA7BqB;AAAA,CAAf","sourcesContent":["import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { LOGIN, LOGOUT } from \"../actionTypes\";\n\nconst url = domain + \"/auth\";\n\nexport const login = loginData => dispatch => {\n  dispatch({\n    type: LOGIN.START\n  });\n\n  return fetch(url + \"/login\", {\n    method: \"POST\",\n    headers: jsonHeaders,\n    body: JSON.stringify(loginData)\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: LOGIN.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(dispatch({ type: LOGIN.FAIL, payload: err }));\n    });\n};\n\nexport const logout = () => (dispatch, getState) => {\n  dispatch({\n    type: LOGOUT.START\n  });\n\n  const token = getState().auth.login.result.token;\n\n  return fetch(url + \"/logout\", {\n    method: \"GET\",\n    headers: { Authorization: \"Bearer \" + token, ...jsonHeaders }\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: LOGOUT.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      if (err.statusCode === 401) {\n        return dispatch({\n          type: LOGOUT.SUCCESS,\n          payload: { statusCode: 200 }\n        });\n      }\n      return Promise.reject(\n        dispatch({ type: LOGOUT.FAIL, payload: err.message })\n      );\n    });\n};\n"]},"metadata":{},"sourceType":"module"}