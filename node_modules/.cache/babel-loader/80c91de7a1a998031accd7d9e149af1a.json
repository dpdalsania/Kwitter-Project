{"ast":null,"code":"import _classCallCheck from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/react/components/NewMessageBox.js\";\nimport React from \"react\";\nimport { withAsyncAction } from \"../HOCs\";\nimport { Spinner } from \".\";\nimport \"./NewMessage.css\";\n\nvar NewMessageBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewMessageBox, _React$Component);\n\n  function NewMessageBox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewMessageBox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewMessageBox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: \"\"\n    };\n\n    _this.keyPress = function (event) {\n      if (event.target.value.trim().length < 2 || event.target.value.trim().length > 255) {\n        event.target.style.color = \"red\";\n      } else {\n        event.target.style.color = \"gray\";\n      }\n\n      if (event.keyCode === 13) {\n        if (_this.state.value.length > 2 && _this.state.value.length < 256) {\n          _this.postMessageByEnter();\n\n          _this.setState({\n            value: \"\"\n          });\n        }\n      } else {\n        _this.setState({\n          value: event.target.value\n        });\n      }\n    };\n\n    _this.postMessageBySubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.value.length > 2 && _this.state.value.length < 256) {\n        _this.props.postMessage({\n          text: _this.state.value\n        }, _this.props.requestTag).then(_this.setState({\n          value: \"\"\n        }));\n      }\n    };\n\n    _this.postMessageByEnter = function (event) {\n      if (_this.state.value.length > 2 && _this.state.value.length < 256) {\n        _this.props.postMessage({\n          text: _this.state.value\n        }, _this.props.requestTag).then(_this.setState({\n          value: \"\"\n        }));\n      }\n    };\n\n    _this.handleCancel = function (event) {\n      _this.setState({\n        value: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewMessageBox, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          error = _this$props.error;\n      return React.createElement(\"div\", {\n        className: \"newMessageBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-user-edit fa-4x newMessageIcon\",\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"newMessageText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        type: \"textarea\",\n        placeholder: \"What's Happening . . .  (2 - 255 chrs)\",\n        rows: \"5\",\n        columns: \"500\",\n        onChange: this.keyPress,\n        onKeyDown: this.keyPress,\n        value: this.state.value,\n        className: \"newMessageTextArea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"newMessageButtonDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        onClick: this.postMessageBySubmit,\n        className: \"newMessageButton\",\n        value: \"Send Kweet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"newMessageButton\",\n        onClick: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Cancel\"))), loading && React.createElement(Spinner, {\n        name: \"circle\",\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), error && React.createElement(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, error.message));\n    }\n  }]);\n\n  return NewMessageBox;\n}(React.Component);\n\nexport default withAsyncAction(\"messages\", \"postMessage\")(NewMessageBox);","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/react/components/NewMessageBox.js"],"names":["React","withAsyncAction","Spinner","NewMessageBox","state","value","keyPress","event","target","trim","length","style","color","keyCode","postMessageByEnter","setState","postMessageBySubmit","preventDefault","props","postMessage","text","requestTag","then","handleCancel","loading","error","message","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withAsyncAction } from \"../HOCs\";\nimport { Spinner } from \".\";\nimport \"./NewMessage.css\";\n\nclass NewMessageBox extends React.Component {\n  state = {\n    value: \"\"\n  };\n\n  keyPress = event => {\n    if (\n      event.target.value.trim().length < 2 ||\n      event.target.value.trim().length > 255\n    ) {\n      event.target.style.color = \"red\";\n    } else {\n      event.target.style.color = \"gray\";\n    }\n\n    if (event.keyCode === 13) {\n      if (this.state.value.length > 2 && this.state.value.length < 256) {\n        this.postMessageByEnter();\n        this.setState({ value: \"\" });\n      }\n    } else {\n      this.setState({ value: event.target.value });\n    }\n  };\n\n  //\n  //Thanks to https://stackoverflow.com/questions/43384039/how-to-get-input-textfield-values-when-enter-key-is-pressed-in-react-js/43384732\n  //for the solution of how to get my textarea to submit with the enter key!\n  //\n\n  postMessageBySubmit = event => {\n    event.preventDefault();\n    if (this.state.value.length > 2 && this.state.value.length < 256) {\n      this.props\n        .postMessage({ text: this.state.value }, this.props.requestTag)\n        .then(this.setState({ value: \"\" }));\n    }\n  };\n\n  postMessageByEnter = event => {\n    if (this.state.value.length > 2 && this.state.value.length < 256) {\n      this.props\n        .postMessage({ text: this.state.value }, this.props.requestTag)\n        .then(this.setState({ value: \"\" }));\n    }\n  };\n\n  handleCancel = event => {\n    this.setState({ value: \"\" });\n  };\n\n  render() {\n    const { loading, error } = this.props;\n    return (\n      <div className=\"newMessageBox\">\n        <i className=\"fas fa-user-edit fa-4x newMessageIcon\" color=\"white\" />\n        <form className=\"newMessageText\">\n          <textarea\n            type=\"textarea\"\n            placeholder=\"What's Happening . . .  (2 - 255 chrs)\"\n            rows=\"5\"\n            columns=\"500\"\n            onChange={this.keyPress}\n            onKeyDown={this.keyPress}\n            value={this.state.value}\n            className=\"newMessageTextArea\"\n          ></textarea>\n          <br />\n          <div className=\"newMessageButtonDiv\">\n            <input\n              type=\"submit\"\n              onClick={this.postMessageBySubmit}\n              className=\"newMessageButton\"\n              value=\"Send Kweet\"\n            ></input>\n            <button className=\"newMessageButton\" onClick={this.handleCancel}>\n              Cancel\n            </button>\n          </div>\n        </form>\n        {loading && <Spinner name=\"circle\" color=\"blue\" />}\n        {error && <p style={{ color: \"red\" }}>{error.message}</p>}\n      </div>\n    );\n  }\n}\n\nexport default withAsyncAction(\"messages\", \"postMessage\")(NewMessageBox);\n"]},"metadata":{},"sourceType":"module"}