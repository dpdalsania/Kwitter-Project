{"ast":null,"code":"import _objectSpread from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { GETUSER, CREATEUSER, DELETEUSER, LOGOUT, PUTUSERPICTURE, UPDATEUSERINFO } from \"../actionTypes\";\nimport { push } from \"connected-react-router\";\nimport { login } from \"./auth\";\nvar url = domain + \"/users\";\nexport var getUser = function getUser(userName) {\n  return function (dispatch) {\n    dispatch({\n      type: GETUSER.START\n    });\n    return fetch(url + \"/\" + userName, {\n      method: \"GET\",\n      headers: jsonHeaders\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: GETUSER.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: GETUSER.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\n\nvar _createUser = function _createUser(registerData) {\n  return function (dispatch) {\n    dispatch({\n      type: CREATEUSER.START\n    });\n    return fetch(url, {\n      method: \"POST\",\n      headers: jsonHeaders,\n      body: JSON.stringify(registerData)\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: CREATEUSER.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: CREATEUSER.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\n\nexport var createUser = function createUser(registerData) {\n  return function (dispatch, getState) {\n    return dispatch(_createUser(registerData)).then(function () {\n      return dispatch(login({\n        username: registerData.username,\n        password: registerData.password\n      }));\n    }).then(function () {\n      return dispatch({\n        type: LOGOUT.SUCCESS,\n        payload: {\n          statusCode: 200\n        }\n      });\n    });\n  };\n};\nexport var deleteUser = function deleteUser() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: DELETEUSER.START\n    });\n    var _getState$auth$login$ = getState().auth.login.result,\n        username = _getState$auth$login$.username,\n        token = _getState$auth$login$.token;\n    return fetch(url + \"/\" + username, {\n      method: \"DELETE\",\n      headers: _objectSpread({\n        Authorization: \"Bearer \" + token\n      }, jsonHeaders)\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: DELETEUSER.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: DELETEUSER.FAIL,\n        payload: err\n      }));\n    }).then(function () {\n      return dispatch({\n        type: LOGOUT.SUCCESS,\n        payload: {\n          statusCode: 200\n        }\n      });\n    });\n  };\n};\n\nvar _updateUserInfo = function _updateUserInfo(_ref) {\n  var username = _ref.username,\n      displayName = _ref.displayName,\n      about = _ref.about,\n      password = _ref.password;\n  return function (dispatch, getState) {\n    var token = getState().auth.login.result.token;\n    var body = {\n      password: password,\n      about: about,\n      displayName: displayName\n    };\n    dispatch({\n      type: UPDATEUSERINFO.START\n    });\n    return fetch(url + \"/\" + username, {\n      method: \"PATCH\",\n      headers: _objectSpread({\n        Authorization: \"Bearer \" + token\n      }, jsonHeaders),\n      body: JSON.stringify(body)\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: UPDATEUSERINFO.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: UPDATEUSERINFO.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\n\nexport var updateUserInfo = function updateUserInfo(updateInfo) {\n  return function (dispatch) {\n    return dispatch(_updateUserInfo(updateInfo)).then(function () {\n      return dispatch(push(\"/profile/\" + updateInfo.username));\n    });\n  };\n};\n\nvar _putUserPicture = function _putUserPicture(formData) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: PUTUSERPICTURE.START\n    });\n    var _getState$auth$login$2 = getState().auth.login.result,\n        username = _getState$auth$login$2.username,\n        token = _getState$auth$login$2.token;\n    return fetch(url + \"/\" + username + \"/picture\", {\n      method: \"PUT\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        Accept: \"application/json\"\n      },\n      body: formData\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: PUTUSERPICTURE.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: PUTUSERPICTURE.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\n\nexport var putUserPicture = function putUserPicture(formData, userId) {\n  return function (dispatch) {\n    return dispatch(_putUserPicture(formData)).then(function () {\n      return dispatch(getUser(userId));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/redux/actionCreators/users.js"],"names":["domain","jsonHeaders","handleJsonResponse","GETUSER","CREATEUSER","DELETEUSER","LOGOUT","PUTUSERPICTURE","UPDATEUSERINFO","push","login","url","getUser","userName","dispatch","type","START","fetch","method","headers","then","result","SUCCESS","payload","catch","err","Promise","reject","FAIL","_createUser","registerData","body","JSON","stringify","createUser","getState","username","password","statusCode","deleteUser","auth","token","Authorization","_updateUserInfo","displayName","about","updateUserInfo","updateInfo","_putUserPicture","formData","Accept","putUserPicture","userId"],"mappings":"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","sourcesContent":["import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport {\n  GETUSER,\n  CREATEUSER,\n  DELETEUSER,\n  LOGOUT,\n  PUTUSERPICTURE,\n  UPDATEUSERINFO\n} from \"../actionTypes\";\nimport { push } from \"connected-react-router\";\n\nimport { login } from \"./auth\";\n\nconst url = domain + \"/users\";\n\nexport const getUser = userName => dispatch => {\n  dispatch({\n    type: GETUSER.START\n  });\n\n  return fetch(url + \"/\" + userName, {\n    method: \"GET\",\n    headers: jsonHeaders\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: GETUSER.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(dispatch({ type: GETUSER.FAIL, payload: err }));\n    });\n};\n\nconst _createUser = registerData => dispatch => {\n  dispatch({ type: CREATEUSER.START });\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: jsonHeaders,\n    body: JSON.stringify(registerData)\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: CREATEUSER.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(dispatch({ type: CREATEUSER.FAIL, payload: err }));\n    });\n};\n\nexport const createUser = registerData => (dispatch, getState) => {\n  return dispatch(_createUser(registerData))\n    .then(() =>\n      dispatch(\n        login({\n          username: registerData.username,\n          password: registerData.password\n        })\n      )\n    )\n    .then(() => {\n      return dispatch({\n        type: LOGOUT.SUCCESS,\n        payload: { statusCode: 200 }\n      });\n    });\n};\n\nexport const deleteUser = () => (dispatch, getState) => {\n  dispatch({ type: DELETEUSER.START });\n\n  const { username, token } = getState().auth.login.result;\n\n  return fetch(url + \"/\" + username, {\n    method: \"DELETE\",\n    headers: { Authorization: \"Bearer \" + token, ...jsonHeaders }\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: DELETEUSER.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(dispatch({ type: DELETEUSER.FAIL, payload: err }));\n    })\n    .then(() => {\n      return dispatch({\n        type: LOGOUT.SUCCESS,\n        payload: { statusCode: 200 }\n      });\n    });\n};\n\nconst _updateUserInfo = ({ username, displayName, about, password }) => (\n  dispatch,\n  getState\n) => {\n  const token = getState().auth.login.result.token;\n  const body = {\n    password: password,\n    about: about,\n    displayName: displayName\n  };\n  dispatch({ type: UPDATEUSERINFO.START });\n  return fetch(url + \"/\" + username, {\n    method: \"PATCH\",\n    headers: { Authorization: \"Bearer \" + token, ...jsonHeaders },\n    body: JSON.stringify(body)\n  })\n\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: UPDATEUSERINFO.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(\n        dispatch({\n          type: UPDATEUSERINFO.FAIL,\n          payload: err\n        })\n      );\n    });\n};\n\nexport const updateUserInfo = updateInfo => dispatch => {\n  return dispatch(_updateUserInfo(updateInfo)).then(() =>\n    dispatch(push(\"/profile/\" + updateInfo.username))\n  );\n};\n\nconst _putUserPicture = formData => (dispatch, getState) => {\n  dispatch({ type: PUTUSERPICTURE.START });\n\n  const { username, token } = getState().auth.login.result;\n\n  return fetch(url + \"/\" + username + \"/picture\", {\n    method: \"PUT\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      Accept: \"application/json\"\n    },\n    body: formData\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: PUTUSERPICTURE.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(\n        dispatch({ type: PUTUSERPICTURE.FAIL, payload: err })\n      );\n    });\n};\n\nexport const putUserPicture = (formData, userId) => dispatch => {\n  return dispatch(_putUserPicture(formData)).then(() => {\n    return dispatch(getUser(userId));\n  });\n};\n"]},"metadata":{},"sourceType":"module"}