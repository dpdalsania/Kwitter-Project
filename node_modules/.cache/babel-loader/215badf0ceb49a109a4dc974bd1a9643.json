{"ast":null,"code":"import _classCallCheck from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/react/components/ProfileCard.js\";\nimport React, { Component } from \"react\";\nimport \"./ProfileCard.css\";\nimport { withAsyncAction } from \"../HOCs\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"semantic-ui-react\";\nimport { Link, CreatedAt, Spinner } from \"../components\";\n\nvar ProfileCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfileCard, _Component);\n\n  function ProfileCard() {\n    _classCallCheck(this, ProfileCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProfileCard).apply(this, arguments));\n  }\n\n  _createClass(ProfileCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getUser(this.props.profileName);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.profileName !== prevProps.profileName) {\n        this.props.getUser(this.props.profileName);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return !this.props.result ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: \"pfp-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"user-picture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.props.pictureLocation ? React.createElement(\"img\", {\n        className: \"user-picture\",\n        src: \"https://drashti-kwitter.herokuapp.com\".concat(this.props.pictureLocation),\n        alt: \"user profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }) : React.createElement(\"img\", {\n        className: \"user-picture\",\n        src: \"https://cdn.pixabay.com/photo/2018/04/22/22/57/hacker-3342696_960_720.jpg\",\n        alt: \"user profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"info-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"titleUserName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Username:\", React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.props.username)), React.createElement(\"div\", {\n        className: \"titleDisplayName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Display Name:\", React.createElement(\"div\", {\n        className: \"displayName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.props.displayName)), React.createElement(\"div\", {\n        className: \"titleTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Joined:\", React.createElement(\"div\", {\n        className: \"displayTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" \", React.createElement(CreatedAt, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.props.about ? this.props.about : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"\\\"No bio provided by this user\\\"\")), React.createElement(\"div\", {\n        className: \"profileButtons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.username === this.props.loggedIn && React.createElement(Link, {\n        to: \"/edit+profile/\".concat(this.props.username),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"editProfileButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Edit profile\")))));\n    }\n  }]);\n\n  return ProfileCard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  if (state.users.getUser.result) {\n    return {\n      loggedIn: state.auth.login.result.username,\n      username: state.users.getUser.result.user.username,\n      pictureLocation: state.users.getUser.result.user.pictureLocation,\n      displayName: state.users.getUser.result.user.displayName,\n      about: state.users.getUser.result.user.about,\n      googleId: state.users.getUser.result.user.googleId,\n      createdAt: state.users.getUser.result.user.createdAt,\n      updatedAt: state.users.getUser.result.user.updatedAt\n    };\n  } else return {};\n};\n\nexport default connect(mapStateToProps)(withAsyncAction(\"users\", \"getUser\")(ProfileCard));","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/react/components/ProfileCard.js"],"names":["React","Component","withAsyncAction","connect","Button","Link","CreatedAt","Spinner","ProfileCard","props","getUser","profileName","prevProps","result","pictureLocation","username","displayName","about","loggedIn","mapStateToProps","state","users","auth","login","user","googleId","createdAt","updatedAt"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ProfileCard.css\";\nimport { withAsyncAction } from \"../HOCs\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"semantic-ui-react\";\n\nimport { Link, CreatedAt, Spinner } from \"../components\";\n\nclass ProfileCard extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.profileName);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.profileName !== prevProps.profileName) {\n      this.props.getUser(this.props.profileName);\n    }\n  }\n\n  render() {\n    return !this.props.result ? (\n      <Spinner />\n    ) : (\n      <div className=\"pfp-card\">\n        <div className=\"user-picture\">\n          {this.props.pictureLocation ? (\n            <img\n              className=\"user-picture\"\n              src={`https://drashti-kwitter.herokuapp.com${this.props.pictureLocation}`}\n              alt=\"user profile\"\n            />\n          ) : (\n            <img\n              className=\"user-picture\"\n              src={\n                \"https://cdn.pixabay.com/photo/2018/04/22/22/57/hacker-3342696_960_720.jpg\"\n              }\n              alt=\"user profile\"\n            />\n          )}\n        </div>\n\n        <div className=\"info-box\">\n          <div className=\"titleUserName\">\n            Username:\n            <div className=\"username\">{this.props.username}</div>\n          </div>\n          <div className=\"titleDisplayName\">\n            Display Name:\n            <div className=\"displayName\">{this.props.displayName}</div>\n          </div>\n          <div className=\"titleTime\">\n            Joined:\n            <div className=\"displayTime\">\n              {\" \"}\n              <CreatedAt />\n            </div>\n          </div>\n          <div className=\"bio\">\n            {this.props.about ? (\n              this.props.about\n            ) : (\n              <p>\"No bio provided by this user\"</p>\n            )}\n          </div>\n          <div className=\"profileButtons\">\n            {this.props.username === this.props.loggedIn && (\n              <Link to={`/edit+profile/${this.props.username}`}>\n                <Button id=\"editProfileButton\">Edit profile</Button>\n              </Link>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  if (state.users.getUser.result) {\n    return {\n      loggedIn: state.auth.login.result.username,\n      username: state.users.getUser.result.user.username,\n      pictureLocation: state.users.getUser.result.user.pictureLocation,\n      displayName: state.users.getUser.result.user.displayName,\n      about: state.users.getUser.result.user.about,\n      googleId: state.users.getUser.result.user.googleId,\n      createdAt: state.users.getUser.result.user.createdAt,\n      updatedAt: state.users.getUser.result.user.updatedAt\n    };\n  } else return {};\n};\n\nexport default connect(mapStateToProps)(\n  withAsyncAction(\"users\", \"getUser\")(ProfileCard)\n);"]},"metadata":{},"sourceType":"module"}