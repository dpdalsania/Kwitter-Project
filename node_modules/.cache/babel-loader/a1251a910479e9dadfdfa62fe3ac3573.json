{"ast":null,"code":"import _classCallCheck from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/react/components/CreatedAt.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nvar NewCreatedAt =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewCreatedAt, _React$Component);\n\n  function NewCreatedAt() {\n    _classCallCheck(this, NewCreatedAt);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NewCreatedAt).apply(this, arguments));\n  }\n\n  _createClass(NewCreatedAt, [{\n    key: \"formatDate\",\n    value: function formatDate(string) {\n      var options = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      };\n      return new Date(string).toLocaleDateString([], options); //the above function courtesy of Stack Overflow at\n      //https://stackoverflow.com/questions/50430968/converting-string-date-in-react-javascript\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, this.formatDate(this.props.createdAt));\n    }\n  }]);\n\n  return NewCreatedAt;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    createdAt: state.users.getUser.result.user.createdAt\n  };\n};\n\nexport default connect(mapStateToProps)(NewCreatedAt);","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/react/components/CreatedAt.js"],"names":["React","connect","NewCreatedAt","string","options","year","month","day","Date","toLocaleDateString","formatDate","props","createdAt","Component","mapStateToProps","state","users","getUser","result","user"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,Y;;;;;;;;;;;;;+BACOC,M,EAAQ;AACjB,UAAIC,OAAO,GAAG;AACZC,QAAAA,IAAI,EAAE,SADM;AAEZC,QAAAA,KAAK,EAAE,MAFK;AAGZC,QAAAA,GAAG,EAAE;AAHO,OAAd;AAKA,aAAO,IAAIC,IAAJ,CAASL,MAAT,EAAiBM,kBAAjB,CAAoC,EAApC,EAAwCL,OAAxC,CAAP,CANiB,CAQjB;AACA;AACD;;;6BAEQ;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKM,UAAL,CAAgB,KAAKC,KAAL,CAAWC,SAA3B,CAAJ,CAAP;AACD;;;;EAfwBZ,KAAK,CAACa,S;;AAkBjC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AAAEH,IAAAA,SAAS,EAAEG,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBC,MAApB,CAA2BC,IAA3B,CAAgCP;AAA7C,GAAP;AACD,CAFD;;AAIA,eAAeX,OAAO,CAACa,eAAD,CAAP,CAAyBZ,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass NewCreatedAt extends React.Component {\n  formatDate(string) {\n    var options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    };\n    return new Date(string).toLocaleDateString([], options);\n\n    //the above function courtesy of Stack Overflow at\n    //https://stackoverflow.com/questions/50430968/converting-string-date-in-react-javascript\n  }\n\n  render() {\n    return <p>{this.formatDate(this.props.createdAt)}</p>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return { createdAt: state.users.getUser.result.user.createdAt };\n};\n\nexport default connect(mapStateToProps)(NewCreatedAt);\n"]},"metadata":{},"sourceType":"module"}