{"ast":null,"code":"import _objectSpread from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { LIKEMESSAGE, UNLIKEMESSAGE, LOGOUT } from \"../actionTypes\";\nimport { getMessages } from \"./messages\";\nvar url = domain + \"/likes\";\nexport var _likeMessage = function _likeMessage(messageId, token) {\n  return function (dispatch) {\n    dispatch({\n      type: LIKEMESSAGE.START\n    });\n    return fetch(url, {\n      method: \"POST\",\n      headers: _objectSpread({}, jsonHeaders, {\n        Authorization: \"Bearer \" + token\n      }),\n      body: JSON.stringify(messageId)\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: LIKEMESSAGE.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      if (err.statusCode === 401) {\n        return dispatch({\n          type: LOGOUT.SUCCESS,\n          payload: {\n            statusCode: 200\n          }\n        });\n      }\n\n      return Promise.reject(dispatch({\n        type: LIKEMESSAGE.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\nexport var _unlikeMessage = function _unlikeMessage(likeId, token) {\n  return function (dispatch) {\n    dispatch({\n      type: UNLIKEMESSAGE.START\n    });\n    return fetch(url + \"/\" + likeId, {\n      method: \"DELETE\",\n      headers: _objectSpread({}, jsonHeaders, {\n        Authorization: \"Bearer \" + token\n      })\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: UNLIKEMESSAGE.SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      if (err.statusCode === 401) {\n        return dispatch({\n          type: LOGOUT.SUCCESS,\n          payload: {\n            statusCode: 200\n          }\n        });\n      }\n\n      return Promise.reject(dispatch({\n        type: UNLIKEMESSAGE.FAIL,\n        payload: err\n      }));\n    });\n  };\n};\nexport var likeMessage = function likeMessage(messageId, token, requestTag) {\n  return function (dispatch) {\n    return dispatch(_likeMessage(messageId, token)).then(function () {\n      return dispatch(getMessages(requestTag));\n    });\n  };\n};\nexport var unlikeMessage = function unlikeMessage(messageId, token, requestTag) {\n  return function (dispatch) {\n    return dispatch(_unlikeMessage(messageId, token)).then(function () {\n      return dispatch(getMessages(requestTag));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/redux/actionCreators/likes.js"],"names":["domain","jsonHeaders","handleJsonResponse","LIKEMESSAGE","UNLIKEMESSAGE","LOGOUT","getMessages","url","_likeMessage","messageId","token","dispatch","type","START","fetch","method","headers","Authorization","body","JSON","stringify","then","result","SUCCESS","payload","catch","err","statusCode","Promise","reject","FAIL","_unlikeMessage","likeId","likeMessage","requestTag","unlikeMessage"],"mappings":"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","sourcesContent":["import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { LIKEMESSAGE, UNLIKEMESSAGE, LOGOUT } from \"../actionTypes\";\nimport { getMessages } from \"./messages\";\n\nconst url = domain + \"/likes\";\n\nexport const _likeMessage = (messageId, token) => dispatch => {\n  dispatch({\n    type: LIKEMESSAGE.START\n  });\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: { ...jsonHeaders, Authorization: \"Bearer \" + token },\n    body: JSON.stringify(messageId)\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: LIKEMESSAGE.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      if (err.statusCode === 401) {\n        return dispatch({\n          type: LOGOUT.SUCCESS,\n          payload: { statusCode: 200 }\n        });\n      }\n      return Promise.reject(dispatch({ type: LIKEMESSAGE.FAIL, payload: err }));\n    });\n};\n\nexport const _unlikeMessage = (likeId, token) => dispatch => {\n  dispatch({\n    type: UNLIKEMESSAGE.START\n  });\n\n  return fetch(url + `/` + likeId, {\n    method: \"DELETE\",\n    headers: { ...jsonHeaders, Authorization: \"Bearer \" + token }\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: UNLIKEMESSAGE.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      if (err.statusCode === 401) {\n        return dispatch({\n          type: LOGOUT.SUCCESS,\n          payload: { statusCode: 200 }\n        });\n      }\n      return Promise.reject(\n        dispatch({ type: UNLIKEMESSAGE.FAIL, payload: err })\n      );\n    });\n};\n\nexport const likeMessage = (messageId, token, requestTag) => dispatch => {\n  return dispatch(_likeMessage(messageId, token)).then(() =>\n    dispatch(getMessages(requestTag))\n  );\n};\n\nexport const unlikeMessage = (messageId, token, requestTag) => dispatch => {\n  return dispatch(_unlikeMessage(messageId, token)).then(() =>\n    dispatch(getMessages(requestTag))\n  );\n};\n"]},"metadata":{},"sourceType":"module"}