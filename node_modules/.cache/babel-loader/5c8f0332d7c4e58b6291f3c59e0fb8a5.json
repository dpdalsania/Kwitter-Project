{"ast":null,"code":"import _defineProperty from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/react/components/EditUserForm.js\";\nimport React from \"react\";\nimport { withAsyncAction } from \"../HOCs\";\nimport \"./EditUserForm.css\";\nimport { Input, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\n\nvar EditUserForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditUserForm, _React$Component);\n\n  function EditUserForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditUserForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditUserForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: _this.props.username,\n      password: \"\",\n      displayName: \"\",\n      about: \"\",\n      error: false\n    };\n\n    _this.check = function () {\n      var _this$state = _this.state,\n          username = _this$state.username,\n          password = _this$state.password,\n          displayName = _this$state.displayName;\n\n      if (username.trim().length < 3 || username.trim().length > 20) {\n        return false;\n      } else if (password.trim().length < 3 || password.trim().length > 20) {\n        return false;\n      } else if (displayName.trim().length < 3 || displayName.trim().length > 20) {\n        return false;\n      } else return true;\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.check) {\n        _this.props.updateUserInfo({\n          username: _this.state.username,\n          password: _this.state.password,\n          displayName: _this.state.displayName,\n          about: _this.state.about\n        });\n      }\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n\n      if (event.target.name === \"password\" || event.target.name === \"displayName\") {\n        if (event.target.value.trim().length < 3 || event.target.value.trim().length > 20) {\n          event.target.style.color = \"red\";\n        } else {\n          event.target.style.color = \"gray\";\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(EditUserForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"edit-profile-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Edit Profile (All Fields Required)\"), React.createElement(Input, {\n        size: \"large\",\n        label: \"New Password\",\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        placeholder: \"3-20 characters, required\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Input, {\n        size: \"large\",\n        label: \"New Display Name\",\n        type: \"text\",\n        name: \"displayName\",\n        placeholder: \"3-20 characters, required\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Input, {\n        size: \"large\",\n        label: \"New About\",\n        type: \"text\",\n        name: \"about\",\n        placeholder: \"Say something about yourself.  (Required)\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Button, {\n        size: \"huge\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return EditUserForm;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    username: state.auth.login.result.username\n  };\n};\n\nexport default connect(mapStateToProps)(withAsyncAction(\"users\", \"updateUserInfo\")(EditUserForm));","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/react/components/EditUserForm.js"],"names":["React","withAsyncAction","Input","Button","connect","EditUserForm","state","username","props","password","displayName","about","error","check","trim","length","handleSubmit","event","preventDefault","updateUserInfo","handleChange","setState","target","name","value","style","color","Component","mapStateToProps","auth","login","result"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withAsyncAction } from \"../HOCs\";\nimport \"./EditUserForm.css\";\nimport { Input, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\n\nclass EditUserForm extends React.Component {\n  state = {\n    username: this.props.username,\n    password: \"\",\n    displayName: \"\",\n    about: \"\",\n    error: false\n  };\n  check = () => {\n    const { username, password, displayName } = this.state;\n    if (username.trim().length < 3 || username.trim().length > 20) {\n      return false;\n    } else if (password.trim().length < 3 || password.trim().length > 20) {\n      return false;\n    } else if (\n      displayName.trim().length < 3 ||\n      displayName.trim().length > 20\n    ) {\n      return false;\n    } else return true;\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.check) {\n      this.props.updateUserInfo({\n        username: this.state.username,\n        password: this.state.password,\n        displayName: this.state.displayName,\n        about: this.state.about\n      });\n    }\n  };\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    if (\n      event.target.name === \"password\" ||\n      event.target.name === \"displayName\"\n    ) {\n      if (\n        event.target.value.trim().length < 3 ||\n        event.target.value.trim().length > 20\n      ) {\n        event.target.style.color = \"red\";\n      } else {\n        event.target.style.color = \"gray\";\n      }\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <form id=\"edit-profile-form\" onSubmit={this.handleSubmit}>\n          <h1>Edit Profile (All Fields Required)</h1>\n          <Input\n            size=\"large\"\n            label=\"New Password\"\n            type=\"password\"\n            name=\"password\"\n            required\n            placeholder=\"3-20 characters, required\"\n            onChange={this.handleChange}\n          />\n          <Input\n            size=\"large\"\n            label=\"New Display Name\"\n            type=\"text\"\n            name=\"displayName\"\n            placeholder=\"3-20 characters, required\"\n            onChange={this.handleChange}\n          />\n          <Input\n            size=\"large\"\n            label=\"New About\"\n            type=\"text\"\n            name=\"about\"\n            placeholder=\"Say something about yourself.  (Required)\"\n            onChange={this.handleChange}\n          />\n          <Button size=\"huge\" type=\"submit\">\n            Submit\n          </Button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    username: state.auth.login.result.username\n  };\n};\n\nexport default connect(mapStateToProps)(\n  withAsyncAction(\"users\", \"updateUserInfo\")(EditUserForm)\n);\n"]},"metadata":{},"sourceType":"module"}