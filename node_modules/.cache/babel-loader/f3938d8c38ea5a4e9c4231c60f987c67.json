{"ast":null,"code":"import _defineProperty from \"/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GETMESSAGELIST } from \"../../actionTypes\";\nimport { withAsyncReducer } from \"../../HORs\";\nvar initialState = {\n  result: null,\n  loading: false,\n  error: null\n};\n\nvar getMessageList = function getMessageList() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GETMESSAGELIST.SUCCESS:\n      return _objectSpread({}, state, {\n        result: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default withAsyncReducer(GETMESSAGELIST, getMessageList);","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---kwitter-frontend/src/redux/stateReducers/messages/getMessageList.js"],"names":["GETMESSAGELIST","withAsyncReducer","initialState","result","loading","error","getMessageList","state","action","type","SUCCESS","payload"],"mappings":";;;;;;AAAA,SAASA,cAAT,QAA+B,mBAA/B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,cAAc,CAACU,OAApB;AACE,+BAAYH,KAAZ;AAAmBJ,QAAAA,MAAM,EAAEK,MAAM,CAACG;AAAlC;;AAEF;AACE,aAAOJ,KAAP;AALJ;AAOD,CARD;;AAUA,eAAeN,gBAAgB,CAACD,cAAD,EAAiBM,cAAjB,CAA/B","sourcesContent":["import { GETMESSAGELIST } from \"../../actionTypes\";\nimport { withAsyncReducer } from \"../../HORs\";\n\nconst initialState = {\n  result: null,\n  loading: false,\n  error: null\n};\n\nconst getMessageList = (state = initialState, action) => {\n  switch (action.type) {\n    case GETMESSAGELIST.SUCCESS:\n      return { ...state, result: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default withAsyncReducer(GETMESSAGELIST, getMessageList);\n"]},"metadata":{},"sourceType":"module"}